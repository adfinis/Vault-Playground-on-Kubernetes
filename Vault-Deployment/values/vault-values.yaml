---
global:
  openshift: false
  tlsDisable: false
injector:
  enabled: false
server:
  image:
    repository: hashicorp/vault-enterprise
    tag: 1.15.2-ent
  dataStorage:
    enabled: true
    size: 1Gi

  # authDelegator enables a cluster role binding to be attached to the service
  # account.  This cluster role binding can be used to setup Kubernetes auth
  # method.  https://www.vaultproject.io/docs/auth/kubernetes.html
  authDelegator:
    enabled: true
  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/vault-ha-tls/vault-playground-cert.ca
    VAULT_TLSCERT: /vault/userconfig/vault-ha-tls/vault-playground-cert.crt
    VAULT_TLSKEY: /vault/userconfig/vault-ha-tls/vault-playground-cert.key
    # the license file is mounted as a secret, because the documented way (enterpriseLicense:secretName: vault-ent-license) caused an permission error
    VAULT_LICENSE_PATH: /vault/license/license.hclic

  volumes:
  - name: userconfig-vault-ha-tls
    secret:
      defaultMode: 420
      secretName: vault-ha-tls

  - name: hashicorp-vault-license
    secret:
      defaultMode: 420
      secretName: hashicorp-vault-license

  volumeMounts:
  - mountPath: /vault/userconfig/vault-ha-tls
    name: userconfig-vault-ha-tls
    readOnly: true

  - mountPath: /vault/license/
    name: hashicorp-vault-license
    readOnly: true

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    ingressClassName: "nginx"
    pathType: Prefix
    activeService: true
    hosts:
      - host: vault.playground.lab
        paths: []

  ha:
    enabled: true
    # can be scaled to 3
    replicas: 1

    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true

        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/vault-ha-tls/vault-playground-cert.crt"
          tls_key_file  = "/vault/userconfig/vault-ha-tls/vault-playground-cert.key"
          tls_client_ca_file = "/vault/userconfig/vault-ha-tls/vault-playground-cert.ca"
        }

        # https://www.vaultproject.io/docs/configuration/storage/raft
        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_tls_servername = "vault-internal"           
            leader_api_addr = "https://vault-active:8200"
            leader_client_cert_file = "/vault/userconfig/vault-ha-tls/vault-playground-cert.crt"
            leader_client_key_file = "/vault/userconfig/vault-ha-tls/vault-playground-cert.key"
            leader_ca_cert_file = "/vault/userconfig/vault-ha-tls/vault-playground-cert.ca"
          }
        }

        # Tag Kubernetes pods with labels for service discovery
        # https://www.vaultproject.io/docs/configuration/service-registration/kubernetes
        service_registration "kubernetes" {}

        telemetry {
          disable_hostname = true
          prometheus_retention_time = "12h"
        }
